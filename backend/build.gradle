buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.springframework:springloaded:1.2.8.RELEASE"
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'findbugs'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

configurations {
    providedRuntime
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'com.opencsv:opencsv:4.0'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'commons-io:commons-io:2.5'

    compileOnly 'org.projectlombok:lombok:1.16.18'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.5' // For Spock mocks.
    testCompile 'org.codehaus.groovy:groovy-all:2.4.12'
}

findbugs {
    sourceSets = [sourceSets.main]
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

test {
    useJUnit {
        exclude '**/*IT.class'
    }
}

task integrationTest(type: Test) {
    useJUnit {
        include '**/*IT.class'
    }
    outputs.upToDateWhen { false }
}
